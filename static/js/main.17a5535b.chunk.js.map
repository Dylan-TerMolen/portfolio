{"version":3,"sources":["Components/MyNavBar.jsx","Components/MySideBar.jsx","Components/CrosswordComponents/Square.jsx","Components/CrosswordComponents/Board.jsx","Components/CrestGAN.jsx","Components/TwitterFC.jsx","Components/Portfolio.jsx","App.js","serviceWorker.js","index.js"],"names":["MyNavBar","handleDropdownClick","e","popupState","close","props","onChange","target","id","AppBar","position","Toolbar","Typography","color","style","flex","variant","popupId","Fragment","Button","bindTrigger","Menu","bindMenu","MenuItem","onClick","IconButton","href","aria-label","Component","useStyles","makeStyles","theme","root","display","appBar","zIndex","drawer","width","flexShrink","drawerPaper","content","flexGrow","padding","spacing","toolbar","mixins","MySideBar","classes","Drawer","className","paper","anchor","Divider","List","ListItem","map","text","index","key","Square","squareClass","this","isCurrent","isInRow","letter","height","Board","makeBoard","w","h","val","arr","i","j","setBoard","x","y","newBoard","state","board","toUpperCase","setState","moveUser","xInc","yInc","userX","userY","handleKeyDown","isHorizontal","window","addEventListener","removeEventListener","row","yIndex","xIndex","CrestGAN","Container","data-line-start","data-line-end","TwitterFC","colspan","src","alt","border","Portfolio","handleProjectChange","newProject","project","CssBaseline","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.17a5535b.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { AppBar, Toolbar, Typography, IconButton, Button, Menu, MenuItem} from '@material-ui/core';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport PopupState, { bindTrigger, bindMenu } from 'material-ui-popup-state';\n\nexport default class MyNavBar extends Component {\n    \n    handleDropdownClick = (e,popupState) => {\n        popupState.close()\n        this.props.onChange(e.target.id)\n        \n    }\n    render() {\n        return (\n            <AppBar position=\"fixed\">\n                <Toolbar>\n                    <Typography color=\"inherit\" style={{ flex: 1 }}>\n                        Dylan TerMolen's Portfolio | Currently a Work in Progress\n                    </Typography>\n                    <span>\n                    <PopupState variant=\"popover\" popupId=\"demo-popup-menu\">\n                        {popupState => (\n                            <React.Fragment>\n                                <Button variant=\"contained\" color=\"primary\" {...bindTrigger(popupState)}>\n                                    See My Projects\n                                </Button>\n                                <Menu {...bindMenu(popupState)} >\n                                    <MenuItem id=\"gan\" onClick={e => this.handleDropdownClick(e,popupState)}>Crest GAN</MenuItem>\n                                    <MenuItem id=\"twfc\" onClick={e => this.handleDropdownClick(e,popupState)}>Twitter FC</MenuItem>\n                                    <MenuItem id=\"crossword\" onClick={e => this.handleDropdownClick(e,popupState)}>Crossword Interface</MenuItem>\n                                </Menu>\n                            </React.Fragment>\n                        )}\n                    </PopupState>\n                        <IconButton href=\"https://www.linkedin.com/in/dylan-termolen-748048170/\" color=\"inherit\" aria-label=\"Save\">\n                            <LinkedInIcon />\n                        </IconButton>\n                        <IconButton href=\"https://github.com/Dylan-TerMolen\" color=\"inherit\" aria-label=\"More Options\">\n                            <GitHubIcon />\n                        </IconButton>\n                    </span>\n                </Toolbar>\n            </AppBar>\n        )\n    }\n}\n","import React from 'react'\nimport {Drawer, Divider, List, ListItem} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n      },\n      appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n      },\n      drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n      },\n      drawerPaper: {\n        width: drawerWidth,\n      },\n      content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n      },\n      toolbar: theme.mixins.toolbar,\n  }));\n\nexport default function MySideBar() {\n    const classes = useStyles()\n    return (\n        <div>\n            <Drawer\n                className={classes.drawer}\n                variant=\"permanent\"\n                classes={{\n                paper: classes.drawerPaper,\n                }}\n                anchor=\"left\"\n            >\n                <div className={classes.toolbar} />\n                <Divider />\n                    <List>\n                        <ListItem><b>Skills</b></ListItem> \n                        {['Python', 'C++', 'SQL', 'JavaScript'].map((text, index) => (\n                            <ListItem key={text}>\n                                {text}\n                            </ListItem>\n                        ))}\n                    </List>\n                <Divider />\n            </Drawer>\n        </div>\n    )\n}\n","import React, { Component } from 'react';\n\nexport default class Square extends Component {\n    render() {\n        let squareClass = \"square\";\n        if (this.props.isCurrent){\n            squareClass += \" square-current\"\n        }\n        if(this.props.isInRow){\n            squareClass += \" square-in-row\"\n        }\n        if(this.props.letter === \"CONTROL\"){\n            squareClass = \"square square-black\"\n        }\n        return (\n                <div className={squareClass} style={{width: '25px', height:'25px'}}>\n                    {this.props.letter !== \"CONTROL\" ? this.props.letter : \"\"}\n                </div>\n            )\n    }\n}\n","import React, { Component } from 'react'\nimport Square from \"./Square\"\nimport \"./CrosswordComponents.css\"\n\nexport default class Board extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            board: this.makeBoard(this.props.width,this.props.height,\" \"),\n            userX: 0,\n            userY: 0,\n            isHorizontal: true\n        }\n    };\n \n    makeBoard = (w, h, val) => {\n        var arr = [];\n        for(let i = 0; i < h; i++) {\n            arr[i] = [];\n            for(let j = 0; j < w; j++) {\n                arr[i][j] = val;\n            }\n        }\n        return arr;\n    }\n    \n    setBoard = (x,y,letter) => {\n        let newBoard = this.state.board; \n        newBoard[y][x] = letter.toUpperCase();\n        this.setState({\"board\":newBoard});\n    }\n\n    moveUser = (xInc,yInc) =>{\n        const {userX} = this.state;\n        const {userY} = this.state;\n        if(xInc === 1 && yInc === 0){\n            if(userX !== this.props.width - 1 ){\n                this.setState({\"userX\":userX + 1})\n            }\n        } else if(xInc === -1 && yInc === 0){\n            if(userX !== 0){\n                this.setState({\"userX\":userX - 1})\n            }\n        } else if(xInc === 0 && yInc === 1){\n            if(userY !== 0){\n                this.setState({\"userY\":userY - 1})\n            }\n        } else if(xInc === 0 && yInc === -1){\n            if(userY !== this.props.height - 1){\n                this.setState({\"userY\":userY + 1}) \n            }\n        }\n    }\n    componentDidMount() {\n        window.addEventListener(\"keydown\",this.handleKeyDown);    \n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"keydown\",this.handleKeyDown);\n    }\n    \n    handleKeyDown = e => {\n        const {key} = e;\n        const {userX} = this.state;\n        const {userY} = this.state;\n        \n        switch(key){\n            case \"ArrowLeft\":\n                this.moveUser(-1,0)\n                break;\n            case \"ArrowRight\":\n                this.moveUser(1,0)\n                break;\n            case \"ArrowUp\":\n                this.moveUser(0,1)\n                break;\n            case \"ArrowDown\":\n                this.moveUser(0,-1)\n                break;\n            case \"Enter\":\n                this.setState({\"isHorizontal\":!this.state.isHorizontal})\n                break;\n            case \"Shift\":\n                // As of now do nothing\n                break;\n            case \"Backspace\":\n                this.setBoard(userX,userY,\"\")\n                if(this.state.isHorizontal){\n                    this.moveUser(-1,0)\n                }else {\n                    this.moveUser(0,1)\n                }\n                break;\n            case \"Meta\":\n                break;\n            default:\n                this.setBoard(userX,userY,key)\n                if(this.state.isHorizontal){\n                    this.moveUser(1,0)\n                }else {\n                    this.moveUser(0,-1)\n                }\n            }\n    }\n\n    render() {\n        return (\n            <div className=\"board\">\n                {this.state.board.map((row,yIndex) => \n                {\n                    return <div className=\"row\" key={yIndex}>\n                    {row.map((letter,xIndex) => \n                        {\n                            let {userX} = this.state\n                            let {userY} = this.state\n                            let isInRow = false;\n                            let isCurrent = (userX === xIndex && \n                                userY === yIndex) ? true : false;\n                            if(this.state.isHorizontal){\n                                if(xIndex !== userX && yIndex === userY){\n                                    isInRow = true;\n                                }\n                            } else {\n                                if(xIndex === userX && yIndex !== userY){\n                                    isInRow = true;\n                                }\n                            }\n                            return <Square letter={letter} isCurrent={isCurrent} isInRow={isInRow} key={xIndex}/>})\n                        }\n                    </div>\n                    \n                })}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Container } from '@material-ui/core';\n\nexport default class CrestGAN extends Component {\n    render() {\n\n        return (\n            <Container>            \n                <h1 className=\"code-line\" data-line-start=\"0\" data-line-end=\"1\" >Crest GAN</h1>\n                <p className=\"has-line-data\" data-line-start=\"1\" data-line-end=\"2\">Crest GAN is the name of my first project utilizing the TensorFlow  machine learning framework to create new images of soccer team crests based upon an existing dataset of soccer team crests. Throughout this process I learned about…</p>\n                <ul>\n                    <li className=\"has-line-data\" data-line-start=\"2\" data-line-end=\"3\">Scraping online data using Python libraries</li>\n                    <li className=\"has-line-data\" data-line-start=\"3\" data-line-end=\"4\">Evaluating generative models based upon image outputs and loss functions</li>\n                    <li className=\"has-line-data\" data-line-start=\"4\" data-line-end=\"6\">Generative model architectures and the power of convolutional layers</li>\n                </ul>\n                  <h1 className=\"code-line\" data-line-start=\"6\" data-line-end=\"7\" >Final Model</h1>\n                 <pre><code className=\"has-line-data\" data-line-start=\"8\" data-line-end=\"35\">\n                     #Python3<br/> \n                    def create_discriminator_model():<br/>\n                    &emsp;&emsp;model = tf.keras.Sequential()<br/>\n                    &emsp;&emsp;input_shape = (120, 120, 3)<br/>\n                    &emsp;&emsp;dropout_prob = 0.4<br/>\n                        <br/>\n                        &emsp;&emsp;model.add(tf.keras.layers.Conv2D(64, 5, strides=2, input_shape=input_shape, padding='same'))<br/>\n                        &emsp;&emsp;model.add(tf.keras.layers.LeakyReLU())<br/>\n                        <br/>\n                        &emsp;&emsp;model.add(tf.keras.layers.Conv2D(128, 5, strides=2, padding='same'))<br/>\n                        &emsp;&emsp;model.add(tf.keras.layers.LeakyReLU())<br/>\n                        &emsp;&emsp;model.add(tf.keras.layers.Dropout(dropout_prob))<br/>\n                        <br/>\n                        &emsp;&emsp;model.add(tf.keras.layers.Conv2D(256, 5, strides=2, padding='same'))<br/>\n                        &emsp;&emsp;model.add(tf.keras.layers.LeakyReLU())<br/>\n                        &emsp;&emsp;model.add(tf.keras.layers.Dropout(dropout_prob))<br/>\n                        <br/>\n                        &emsp;&emsp;model.add(tf.keras.layers.Conv2D(512, 5, strides=2, padding='same'))<br/>\n                        &emsp;&emsp;model.add(tf.keras.layers.LeakyReLU())<br/>\n                        &emsp;&emsp;model.add(tf.keras.layers.Dropout(dropout_prob))<br/>\n                        <br/>\n                        &emsp;&emsp;model.add(tf.keras.layers.Flatten())<br/>\n                        &emsp;&emsp;model.add(tf.keras.layers.Dense(1))<br/>\n                        &emsp;&emsp;model.add(tf.keras.layers.Activation('sigmoid'))<br/>\n                        <br/>\n                        &emsp;&emsp;return model<br/>\n                </code></pre>\n            <h1 className=\"code-line\" data-line-start=\"36\" data-line-end=\"37\" >Resources Used</h1>\n            <p className=\"has-line-data\" data-line-start=\"38\" data-line-end=\"39\">I used a number of open source libraries and frameworks to complete this project.</p>\n            </Container>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class TwitterFC extends Component {\n    render() {\n        return (\n            <div>\n   <h1>\n      <strong>Twitter FC</strong>\n   </h1>\n   <h2>\n      <strong>Project Description </strong>\n   </h2>\n   <p>\n      I was able to take lead on this project as the Project Manager. I was responsible for laying out the steps of the project, the plan of execution, as well as doing a good amount of the coding required. The goal of our project was to streamline sports updates for people who may not want to go through the trouble of looking up each individual game, league, or score. As sports fans, we all love knowing the scores that we care about, but sometimes it can be a hassle to look the scores all up individually. When thinking about the best way to receive this information, we decided Twitter would be the best way, as it has over 330 million users and would allow users to view the information on a platform they are already using. We also wanted to make sure that the data retrieval process was entirely separate from the tweeting process. This allows for the program to be more modular as well as scalable. This will allow us to accrue less technical debt as the project goes on if we decide to continue and make this a business. This also allowed for us to complete the project faster as we were able to work on the separate classes at the same time and then quickly make them compatible with each other. In order to achieve our goal we used the Python tweepy library to interface our class with the Twitter API as well as the Python requests library to send http requests to get the soccer information that we needed. This project was a great learning experience that taught us about http requests, the importance of exception safety, and code modularization. \n   </p>\n   <h2>\n      <strong>Responsibility Matrix</strong>\n   </h2>\n   <table>\n      <tr>\n         <td>Task\n         </td>\n         <td>Dylan\n         </td>\n         <td>George\n         </td>\n         <td>Quinn\n         </td>\n      </tr>\n      <tr>\n         <td>Plan Project\n         </td>\n         <td>R\n         </td>\n         <td>R\n         </td>\n         <td>R\n         </td>\n      </tr>\n      <tr>\n         <td>Set up Twitter account and get developer credentials\n         </td>\n         <td>I\n         </td>\n         <td>C\n         </td>\n         <td>R\n         </td>\n      </tr>\n      <tr>\n         <td>Access data source for updated Soccer information\n         </td>\n         <td>A\n         </td>\n         <td>R\n         </td>\n         <td>I\n         </td>\n      </tr>\n      <tr>\n         <td>Get everyone setup with Python\n         </td>\n         <td>R\n         </td>\n         <td>R\n         </td>\n         <td>R\n         </td>\n      </tr>\n      <tr>\n         <td>Build Python Class for tweeting\n         </td>\n         <td>R\n         </td>\n         <td>I\n         </td>\n         <td>C\n         </td>\n      </tr>\n      <tr>\n         <td>Build Python Class for getting data\n         </td>\n         <td>C\n         </td>\n         <td>I\n         </td>\n         <td>R\n         </td>\n      </tr>\n      <tr>\n         <td>Connect the two classes\n         </td>\n         <td>R\n         </td>\n         <td>C\n         </td>\n         <td>A\n         </td>\n      </tr>\n      <tr>\n         <td>Run tests\n         </td>\n         <td>C\n         </td>\n         <td>R\n         </td>\n         <td>C\n         </td>\n      </tr>\n      <tr>\n         <td>Find server to run code daily\n         </td>\n         <td>I\n         </td>\n         <td>C\n         </td>\n         <td>R\n         </td>\n      </tr>\n      <tr>\n         <td>Continue to monitor for errors\n         </td>\n         <td>A\n         </td>\n         <td>R\n         </td>\n         <td>A\n         </td>\n      </tr>\n   </table>\n   <table>\n      <tr>\n         <td colspan=\"2\" >KEY\n         </td>\n      </tr>\n      <tr>\n         <td>R\n         </td>\n         <td>Responsible\n         </td>\n      </tr>\n      <tr>\n         <td>I\n         </td>\n         <td>Informed\n         </td>\n      </tr>\n      <tr>\n         <td>C\n         </td>\n         <td>Consulted\n         </td>\n      </tr>\n      <tr>\n         <td>A\n         </td>\n         <td>Accountable\n         </td>\n      </tr>\n   </table>\n   <h2>\n      <strong>Attendance Log</strong>\n   </h2>\n   <table>\n      <tr>\n         <td><strong>Date</strong>\n         </td>\n         <td>11/12\n         </td>\n         <td>11/14\n         </td>\n         <td>11/17\n         </td>\n         <td>11/19\n         </td>\n         <td>11/21\n         </td>\n         <td>12/1\n         </td>\n      </tr>\n      <tr>\n         <td><strong>George</strong>\n         </td>\n         <td>✓\n         </td>\n         <td>✓\n         </td>\n         <td>✓\n         </td>\n         <td>✓\n         </td>\n         <td>X\n         </td>\n         <td>✓\n         </td>\n      </tr>\n      <tr>\n         <td><strong>Quinn</strong>\n         </td>\n         <td>✓\n         </td>\n         <td>X\n         </td>\n         <td>✓\n         </td>\n         <td>✓\n         </td>\n         <td>✓\n         </td>\n         <td>✓\n         </td>\n      </tr>\n      <tr>\n         <td><strong>Dylan</strong>\n         </td>\n         <td>✓\n         </td>\n         <td>✓\n         </td>\n         <td>✓\n         </td>\n         <td>✓\n         </td>\n         <td>✓\n         </td>\n         <td>✓\n         </td>\n      </tr>\n   </table>\n   <p>\n      Our team had solid attendance for all of our meetings. Between the group members there were only two total misses in six meetings. This means our group had a cumulative attendance of 89%. Our attendance record helped us to work cohesively and split up the work equally.\n   </p>\n   <h2>\n      <strong>GANTT Chart</strong>\n   </h2>\n   <p>\n         <img src=\"https://i.ibb.co/kgX2BkF/image6.png\" alt=\"GANTT Chart\" border=\"0\"/>\n   </p>\n   <h2>\n      <strong>Program Flow Diagram</strong>\n   </h2>\n   <p>\n        <img src=\"https://i.ibb.co/w46LCpy/image7.png\" alt=\"Program Flow\" border=\"0\"/> \n   </p>\n   <h2>\n      <strong>Cost / Budget Information</strong>\n   </h2>\n   <p>\n      We were able to take advantage of the wide variety of open source tools so that we could complete this project entirely free of charge. \n   </p>\n   <p>\n      <strong>Total Price: $0.00</strong>\n   </p>\n   <h2>\n      <strong>Potential Sales of the Product/Project or Market Estimation </strong>\n   </h2>\n   <p>\n      There are multiple social media automation tools currently on the market that allow for users to schedule posts on social media sites like Twitter and Instagram. One of the most popular is buffer. Buffer charges $15 per month to allow for one user to schedule 100 posts across eight different accounts. We were able to complete this project free of charge, so I think we would certainly be able to undercut this competitor and still make a profit. One potential concern is that our costs would certainly rise above $0 as we begin to scale. In order to gain awareness for our product we would want to build a website and server costs would continue to grow as we got more users. I believe that we would be able to support 20 users a month giving them the same usage as buffer for the price of only $12 per month. A relatively powerful Amazon Web Services server would cost about $75 so with 20 users per month at $12 per user per month we would be making $240 - $75 = $165 per month. We would only be able to achieve this level of profit by putting in a lot of time into the project, but it is certainly achievable. \n   </p>\n   <h2>\n      <strong>Benefits of the Project </strong>\n   </h2>\n   <p>\n      This project has many benefits. The most obvious is the benefit to soccer fans who want to see soccer standings everyday on their twitter feed, without all the hassle of looking up standings for each league. However, the benefits of this project could very easily be applied to any number of applications. The most obvious are sports related. For example, our bot could tweet out scores, standings, or player stats for any sport. In addition, the bot can easily be modified to tweet daily, weekly, or in any other desired interval of time. It can even be programmed to tweet out only when there is an update from the last tweet, to avoid repetitive information. \n   </p>\n   <h2>\n      <strong>Problems We Encountered</strong>\n   </h2>\n   <p>\n      One major problem we ran into was the lack of documentation for the libraries we wanted to use. We originally went with a different Twitter interfacing library but found it too difficult to use due to the lack of documentation on the code. Another problem we ran into was with exception handling. At times if the Soccer API was down or we received data that was a little unusual, the program would stop midway through the series of tweets. This would be a big problem because then maybe half of our standings would be tweeted and the others would be left out. This was solved during our testing phase where we located the common errors and prevented them to allow for the program to continue running.\n   </p>\n   <p>\n      Another problem we ran into was the twitter character limit. Twitter limits its tweets to 280 characters, and therefore we could not all the teams from a league, and their points into one tweet. We solved this problem by only tweeting the current top 10 teams. This limited the information we were able to tweet, however it kept our tweets from getting messed up and looking sloppy.\n   </p>\n   <h2>\n      <strong>Future Work or Possibilities with the Project</strong>\n   </h2>\n   <p>\n      There are many possible uses for Twitter Bots. As we talked about earlier, we could make a twitter bot that does something completely different, however there are some ways to improve on our current goal.\n   </p>\n   <p>\n      Right now ours just tweets the daily standings of various major soccer leagues around the world, however it is missing a fey key leagues and the tweets could be made to look nicer, too. Our bot could also be modified to only tweet if the standings change, however if we wanted it to tweet for every change in real time we would need to have our script run constantly, and that could be costly. Because of the tweet character limit we could only do the top ten in each league. We could split the order up more, but still print out every team in separate tweets, and add more things like goal differential to fix this flaw and improve.\n   </p>\n   <p>\n      Two people have already followed the account, and some posts already have likes, this is with no publicizing at all. We could do some marketing with more time and resources and get a big follower base. This could lead to new, related opportunities to get followers involved and keep them updated on world soccer.\n   </p>\n</div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport MyNavBar from './MyNavBar'\nimport MySideBar from './MySideBar'\nimport Board from './CrosswordComponents/Board'\nimport CrestGAN from './CrestGAN'\nimport TwitterFC from './TwitterFC'\nimport {Container, CssBaseline} from '@material-ui/core'\nexport default class Portfolio extends Component {\n    constructor(props){\n        super(props);\n        this.state = {project:'twfc'}\n    }\n\n    handleProjectChange = (newProject) => {\n        this.setState({project:newProject})\n    }\n    render() {\n        const articleStyle = {\n            // top right bottom left \n            padding: \"50px 0px 0px 250px\"\n          };\n        var project;\n        switch(this.state.project){\n            case 'gan':\n                project = <CrestGAN/>\n                break;\n            case 'crossword':\n                const boardSideLength = 8\n                project = <Board width={boardSideLength} height={boardSideLength}/>\n                break;\n            case 'twfc':\n                project = <TwitterFC/>\n                break;\n            default:\n                project = <h1>Should not be seeing this</h1>\n        }\n\n\n        return (\n            <React.Fragment>\n                <CssBaseline/> \n                <MyNavBar onChange={this.handleProjectChange}/> \n                <MySideBar/> \n                <Container style={articleStyle}>            \n                    {project}\n                </Container>\n            </React.Fragment>\n        )\n    }\n}\n","import React from 'react';\nimport Portfolio from './Components/Portfolio'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Portfolio/> \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}