{"version":3,"sources":["Components/MyNavBar.jsx","Components/CrosswordComponents/Square.jsx","Components/CrosswordComponents/Board.jsx","Components/Portfolio.jsx","App.js","serviceWorker.js","index.js"],"names":["MyNavBar","AppBar","position","Toolbar","Typography","variant","color","IconButton","href","aria-label","Component","Square","squareClass","this","props","isCurrent","isInRow","letter","className","Board","makeBoard","w","h","val","arr","i","j","setBoard","x","y","newBoard","state","board","toUpperCase","setState","moveUser","xInc","yInc","userX","userY","width","height","handleKeyDown","e","key","isHorizontal","window","addEventListener","removeEventListener","map","row","yIndex","xIndex","Portfolio","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.201fc958.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { AppBar, Toolbar, Typography, IconButton} from '@material-ui/core';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\nexport default class MyNavBar extends Component {    \n    render() {\n        return (\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Typography variant=\"title\" color=\"inherit\">\n                        Dylan TerMolen's Portfolio | Currently a Work in Progress\n                    </Typography>\n    \n                    <span>\n                        <IconButton href=\"https://www.linkedin.com/in/dylan-termolen-748048170/\" color=\"inherit\" aria-label=\"Save\">\n                            <LinkedInIcon />\n                        </IconButton>\n                        <IconButton href=\"https://github.com/Dylan-TerMolen\" color=\"inherit\" aria-label=\"More Options\">\n                            <GitHubIcon />\n                        </IconButton>\n                    </span>\n                </Toolbar>\n            </AppBar>\n        )\n    }\n}\n","import React, { Component } from 'react';\n\nexport default class Square extends Component {\n    render() {\n        let squareClass = \"square\";\n        if (this.props.isCurrent){\n            squareClass += \" square-current\"\n        }\n        if(this.props.isInRow){\n            squareClass += \" square-in-row\"\n        }\n        if(this.props.letter === \"CONTROL\"){\n            squareClass = \"square square-black\"\n        }\n        return (\n                <div className={squareClass}>\n                    {this.props.letter !== \"CONTROL\" ? this.props.letter : \"\"}\n                </div>\n            )\n    }\n}\n","import React, { Component } from 'react'\nimport Square from \"./Square\"\nimport \"./CrosswordComponents.css\"\n\nexport default class Board extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            board: this.makeBoard(this.props.width,this.props.height,\" \"),\n            userX: 0,\n            userY: 0,\n            isHorizontal: true\n        }\n    };\n \n    makeBoard = (w, h, val) => {\n        var arr = [];\n        for(let i = 0; i < h; i++) {\n            arr[i] = [];\n            for(let j = 0; j < w; j++) {\n                arr[i][j] = val;\n            }\n        }\n        return arr;\n    }\n    \n    setBoard = (x,y,letter) => {\n        let newBoard = this.state.board; \n        newBoard[y][x] = letter.toUpperCase();\n        this.setState({\"board\":newBoard});\n    }\n\n    moveUser = (xInc,yInc) =>{\n        const {userX} = this.state;\n        const {userY} = this.state;\n        if(xInc === 1 && yInc === 0){\n            if(userX !== this.props.width - 1 ){\n                this.setState({\"userX\":userX + 1})\n            }\n        } else if(xInc === -1 && yInc === 0){\n            if(userX !== 0){\n                this.setState({\"userX\":userX - 1})\n            }\n        } else if(xInc === 0 && yInc === 1){\n            if(userY !== 0){\n                this.setState({\"userY\":userY - 1})\n            }\n        } else if(xInc === 0 && yInc === -1){\n            if(userY !== this.props.height - 1){\n                this.setState({\"userY\":userY + 1}) \n            }\n        }\n    }\n    componentDidMount() {\n        window.addEventListener(\"keydown\",this.handleKeyDown);    \n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"keydown\",this.handleKeyDown);\n    }\n    \n    handleKeyDown = e => {\n        const {key} = e;\n        const {userX} = this.state;\n        const {userY} = this.state;\n        \n        switch(key){\n            case \"ArrowLeft\":\n                this.moveUser(-1,0)\n                break;\n            case \"ArrowRight\":\n                this.moveUser(1,0)\n                break;\n            case \"ArrowUp\":\n                this.moveUser(0,1)\n                break;\n            case \"ArrowDown\":\n                this.moveUser(0,-1)\n                break;\n            case \"Enter\":\n                this.setState({\"isHorizontal\":!this.state.isHorizontal})\n                break;\n            case \"Shift\":\n                // As of now do nothing\n                break;\n            case \"Backspace\":\n                this.setBoard(userX,userY,\"\")\n                if(this.state.isHorizontal){\n                    this.moveUser(-1,0)\n                }else {\n                    this.moveUser(0,1)\n                }\n                break;\n            case \"Meta\":\n                break;\n            default:\n                this.setBoard(userX,userY,key)\n                if(this.state.isHorizontal){\n                    this.moveUser(1,0)\n                }else {\n                    this.moveUser(0,-1)\n                }\n            }\n    }\n\n    render() {\n        return (\n            <div className=\"board\">\n                {this.state.board.map((row,yIndex) => \n                {\n                    return <div className=\"row\" key={yIndex}>\n                    {row.map((letter,xIndex) => \n                        {\n                            let {userX} = this.state\n                            let {userY} = this.state\n                            let isInRow = false;\n                            let isCurrent = (userX === xIndex && \n                                userY === yIndex) ? true : false;\n                            if(this.state.isHorizontal){\n                                if(xIndex !== userX && yIndex === userY){\n                                    isInRow = true;\n                                }\n                            } else {\n                                if(xIndex === userX && yIndex !== userY){\n                                    isInRow = true;\n                                }\n                            }\n                            return <Square letter={letter} isCurrent={isCurrent} isInRow={isInRow} key={xIndex}/>})\n                        }\n                    </div>\n                    \n                })}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport MyNavBar from './MyNavBar'\nimport Board from './CrosswordComponents/Board'\n\nexport default class Portfolio extends Component {\n    render() {\n        return (\n            <div>\n                <MyNavBar/> \n                <Board width=\"15\" height=\"15\"/> \n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport Portfolio from './Components/Portfolio'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Portfolio/> \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}